if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
      \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif
" Plugins will be downloaded under the specified directory.  
call plug#begin('~/.vim/plugged')

" Declare the list of plugins.
Plug 'plasticboy/vim-markdown', { 'for': 'markdown' }
Plug 'mattn/emmet-vim', { 'for': 'html' }
Plug 'rust-lang/rust.vim', { 'for': 'rust' }
Plug 'peterhoeg/vim-qml', { 'for': 'qml' }
Plug 'ElmCast/elm-vim', { 'for': 'elm' }
Plug 'tpope/vim-rails', { 'for': ['ruby', 'eruby'] }
Plug 'tpope/vim-rails', { 'for': ['ruby', 'eruby'] }
Plug 'rking/ag.vim'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'ivalkeen/vim-ctrlp-tjump'
Plug 'mileszs/ack.vim' 
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' } 
Plug 'scrooloose/syntastic'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-dispatch'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-ragtag'
Plug 'Raimondi/delimitMate'
Plug 'mattn/webapi-vim'
Plug 'mattn/gist-vim'
Plug 'w0ng/vim-hybrid'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'vim-scripts/dbext.vim'
Plug 'alvan/vim-closetag'
Plug 'exitface/synthwave.vim'
Plug 'altercation/vim-colors-solarized'
Plug 'kristijanhusak/vim-hybrid-material'
Plug 'kristijanhusak/vim-hybrid-material'
Plug 'pangloss/vim-javascript'
Plug 'mxw/vim-jsx'
Plug 'airblade/vim-gitgutter'

" List ends here. Plugins become visible to Vim after this call.  
call plug#end()

let g:closetag_filenames = "*.html,*.xhtml,*.phtml,*.php,*.jsx,*.js"

syntax on

highlight BadWhitespace ctermbg=red guibg=red
hi CursorLine term=bold cterm=bold guibg=Grey40

"colorscheme solarized
"colorscheme synthwave
colorscheme hybrid_material

"set guifont=DejaVu\ Sans\ Mono\ 12 
set guifont=Monospace\ 12

filetype plugin on
filetype indent on

set encoding=utf-8
set bg=dark
set background=dark
set autoindent
set hlsearch
set number
set hidden
set backupcopy=yes
set nowrap

"vim-airline"
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1
if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif
 let g:airline_symbols.space = "\ua0"

let g:airline_theme='hybrid'
"let g:airline_theme='powerlineish'
"let g:airline_theme='solarized'
"
" no temp or backup files
set noswapfile
set nobackup
set nowritebackup
set omnifunc=syntaxcomplete#Complete
set t_Co=256

" JS configuration
au BufRead,BufNewFile *.js set expandtab
au BufRead,BufNewFile *.js set tabstop=2
au BufRead,BufNewFile *.js set softtabstop=2
au BufRead,BufNewFile *.js set shiftwidth=2
au BufRead,BufNewFile *.js set autoindent
au BufRead,BufNewFile *.js match BadWhitespace /^\t\+/
au BufRead,BufNewFile *.js match BadWhitespace /\s\+$/
au BufNewFile *.js set fileformat=unix
au BufRead,BufNewFile *.js let b:comment_leader = '//'

let g:javascript_plugin_jsdoc = 1
let g:jsx_ext_required = 0

" Packages
let g:ctrlp_custom_ignore = {
 \ 'dir': '\.git$\|\.yardoc\|build|dist|bower_components|node_modules|public$|log\|tmp$',
 \ 'file': '\.so$\|\.dat$|\.DS_Store$'
 \ }

" Key Commands
map <C-\> :NERDTreeToggle<CR>

set wildignore+=*/node_modules/*

let g:used_javascript_libs = 'react'

"NerdTree config
let NERDTreeShowHidden=1

noremap <silent> <C-S>          :update<CR>
vnoremap <silent> <C-S>         <C-C>:update<CR>
inoremap <silent> <C-S>         <C-O>:update<CR>

" Syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1 
let g:syntastic_check_on_open = 0 
let g:syntastic_check_on_wq = 0
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_javascript_eslint_exe = 'yarn lint:js'
let g:syntastic_skip_checks = 1
let g:jsx_ext_required = 0 " Allow JSX in normal JS files"
let g:syntastic_mode_map = { "mode": "passive" }

set guioptions=i
set guioptions-=r


" Clipboard copy/paste
:set clipboard=unnamed
" Highlight current line
:set cursorline

